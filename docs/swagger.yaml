basePath: /v1
definitions:
  model.Domain:
    properties:
      account:
        type: string
      id:
        type: integer
      last_check:
        type: integer
      master:
        type: string
      name:
        type: string
      notified_serial:
        type: integer
      records:
        $ref: '#/definitions/model.Records'
        type: object
      type:
        type: string
    type: object
  model.Domains:
    items:
      properties:
        account:
          type: string
        id:
          type: integer
        last_check:
          type: integer
        master:
          type: string
        name:
          type: string
        notified_serial:
          type: integer
        records:
          $ref: '#/definitions/model.Records'
          type: object
        type:
          type: string
      type: object
    type: array
  model.Record:
    properties:
      auth:
        type: boolean
      content:
        type: string
      disabled:
        type: boolean
      domain_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      ordername:
        type: string
      prio:
        type: integer
      ttl:
        type: integer
      type:
        type: string
    type: object
  model.Records:
    items:
      properties:
        auth:
          type: boolean
        content:
          type: string
        disabled:
          type: boolean
        domain_id:
          type: integer
        id:
          type: integer
        name:
          type: string
        ordername:
          type: string
        prio:
          type: integer
        ttl:
          type: integer
        type:
          type: string
      type: object
    type: array
  pdns_api.HTTPError:
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: This is PDNS RESTful API Server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: PDNS-API
  version: "1.0"
paths:
  /domains:
    get:
      consumes:
      - application/json
      description: get domains
      parameters:
      - description: Domain ID
        in: query
        name: id
        type: integer
      - description: Name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Domains'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Domains'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: get domains
      tags:
      - domains
    post:
      consumes:
      - application/json
      description: create domain
      parameters:
      - description: Domain Object
        in: body
        name: domain
        required: true
        schema:
          $ref: '#/definitions/model.Domain'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: create domain
      tags:
      - domains
  /domains/{id}:
    delete:
      consumes:
      - application/json
      description: delete domain
      parameters:
      - description: Domain ID
        in: path
        name: id
        required: true
        type: interger
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Domain'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: delete domain
      tags:
      - domains
    put:
      consumes:
      - application/json
      description: update domain
      parameters:
      - description: Dorain ID
        in: path
        name: id
        required: true
        type: integer
      - description: Domain Object
        in: body
        name: domain
        required: true
        schema:
          $ref: '#/definitions/model.Domain'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Domain'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: update domain
      tags:
      - domains
  /domains/{name}:
    delete:
      consumes:
      - application/json
      description: delete domain
      parameters:
      - description: Domain Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: delete domain
      tags:
      - domains
    put:
      consumes:
      - application/json
      description: update domain
      parameters:
      - description: Dorain Name
        in: path
        name: name
        required: true
        type: string
      - description: Domain Object
        in: body
        name: domain
        required: true
        schema:
          $ref: '#/definitions/model.Domain'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: update domain
      tags:
      - domains
  /records:
    get:
      consumes:
      - application/json
      description: get records
      parameters:
      - description: Record ID
        in: query
        name: id
        type: integer
      - description: Domain ID
        in: query
        name: domain_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Records'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Records'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: get records
      tags:
      - records
    post:
      consumes:
      - application/json
      description: create record
      parameters:
      - description: Record Object
        in: body
        name: record
        required: true
        schema:
          $ref: '#/definitions/model.Record'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Record'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: create record
      tags:
      - records
  /records/{id}:
    delete:
      consumes:
      - application/json
      description: delete record
      parameters:
      - description: 'Record ID '
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Record'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: delete record
      tags:
      - records
    put:
      consumes:
      - application/json
      description: update record
      parameters:
      - description: 'Record ID '
        in: path
        name: id
        required: true
        type: integer
      - description: Record Object
        in: body
        name: record
        required: true
        schema:
          $ref: '#/definitions/model.Record'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Record'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: update record
      tags:
      - records
  /records/disable/{id}:
    put:
      consumes:
      - application/json
      description: disable record
      parameters:
      - description: 'Record ID '
        in: path
        name: id
        required: true
        type: integer
      - description: Record Object
        in: body
        name: record
        required: true
        schema:
          $ref: '#/definitions/model.Record'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Record'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: disable record
      tags:
      - records
  /records/enable/{id}:
    put:
      consumes:
      - application/json
      description: enable record
      parameters:
      - description: 'Record ID '
        in: path
        name: id
        required: true
        type: integer
      - description: Record Object
        in: body
        name: record
        required: true
        schema:
          $ref: '#/definitions/model.Record'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Record'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/pdns_api.HTTPError'
            type: object
      security:
      - ID: []
      - Secret: []
      summary: enable record
      tags:
      - records
  /viron:
    get:
      consumes:
      - application/json
      description: get global menu
      operationId: viron#get
      produces:
      - application/json
      summary: get global menu
      tags:
      - viron
  /viron_authtype:
    get:
      consumes:
      - application/json
      description: get auth type
      operationId: viron_authtype#get
      produces:
      - application/json
      summary: get auth type
      tags:
      - viron
securityDefinitions:
  ID:
    in: header
    name: PIR5-ID
    type: apiKey
  Secret:
    in: header
    name: PIR5-SECRET
    type: apiKey
swagger: "2.0"
tags:
- name: domains
- name: records
- name: viron
